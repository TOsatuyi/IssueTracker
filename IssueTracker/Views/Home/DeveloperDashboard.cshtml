@using System.Security.Claims
@model IEnumerable<IssueTracker.Models.Issue>

@{
    ViewData["Title"] = "DeveloperDashboard";
}

<h1 class=" text-center mb-4 ">Developer Dashboard</h1>

@if (!Model.Any())
{
    <div class=" alert alert-info">No issues assigned to you at the moment.</div>
}
else
{
    <div class=" table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="table-dark">
        <tr>
            <th>Application</th>
            <th>Description</th>
            <th>Severity</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var issue in Model.Where(i => i.DeveloperId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
        {
            <tr>
                <td>@issue.Application.Name</td>
                <td>@issue.Description</td>
                <td>@issue.Severity</td>
                <td>@issue.Status</td>
                        <td class="text-center">
                    <a href="@Url.Action("ViewIssue", "Home", new { id = issue.Id })" class=" btn btn-info btn-sm">View Details</a>
                    @if (issue.Status != "Ready for Testing" && issue.Status != "Fixed")
                    {
                                <form method="post" asp-action="UpdateIssueStatus" asp-controller="Home" class="d-inline">
                            <input type="hidden" name="id" value="@issue.Id" />
                            <input type="hidden" name="status" value="Ready for Testing" />
                                    <button type="submit" class="btn btn-primary btn-sm">Mark as Ready for Testing</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
    </div>
}

